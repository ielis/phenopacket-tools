# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "develop" ]

jobs:
  build-docs:
    runs-on: ubuntu-latest
    env:
      JDK_VERSION: ${{ matrix.jdk }}

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 17 ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    
    - name: Set up Python 3.
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install dependencies
      run: | 
        pip install sphinx
        pip install sphinx-rtd-theme
    
    - name: MVN clean
      run: ./mvnw -Prelease clean package

    - name: Get CLI JAR file
      id: cli-jar
      uses: ielis/Path-lister-action@try_pattern
      with:
          path: "phenopacket-tools-cli/target/"
          # The pattern should match two types of inputs:
          #  - bla-bla-1.2.3.jar          (release)
          #  - bla-bla-1.2.3-SNAPSHOT.jar (snapshot)
          # Using named groups below in attempt to improve legibility.
          regex: ".*(?P<semantic_version>\\d\\.\\d\\.\\d)(?P<snapshot>-SNAPSHOT)?\\.jar$"

    - name: Output results
      id: jar-file
      run: |
        echo "Found ${{ steps.cli-jar.outputs.path_count }} file(s) with this extension:"
        for i in ${{ steps.cli-jar.outputs.paths }}; do
        echo $i
        done
        
    - name: Build documentation
      run: | 
        java -jar ${{ steps.cli-jar.outputs.paths }} examples
        make yaml-docs -B
        mkdir gh-pages gh-pages/examples
        touch gh-pages/.nojekyll
        cd docs/ 
        sphinx-build -b html . _build
        cp -r _build/* ../gh-pages/
        cp -r yaml/* ../gh-pages/examples

    - name: Deploy documentation.
      if: ${{ github.event_name == 'push' }}
      uses: JamesIves/github-pages-deploy-action@v4.3.0
      with:
        branch: gh-pages
        force: true
        folder: gh-pages


